<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Label" x:Key="LabelItem">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">

                        <TextBlock DockPanel.Dock="Right"
								Foreground="Orange"
								Margin="5" 
								FontSize="12pt"
								Text="{Binding ElementName=MyAdorner, 
                               Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                        </TextBlock>

                        <Border BorderBrush="Green" BorderThickness="3">
                            <AdornedElementPlaceholder Name="MyAdorner" />
                        </Border>

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
						Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="ButtonItem">
        <!--<Setter Property="Background" Value="{DynamicResource PurpleGradient}"/>-->
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <LinearGradientBrush x:Key="PurpleGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#c61aff" Offset="0"/>
        <GradientStop Color="#CCCCFF" Offset="0.5"/>
        <GradientStop Color="#c61aff" Offset="1"/>
    </LinearGradientBrush>
    
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Border x:Name="border" Background="WhiteSmoke"/>
                            </Grid>
                            <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro"  >
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="14,4"/>
                                <!--<ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />-->
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#ffbf00" />
                            <Setter TargetName="border" Property="Width" Value="auto"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#cc9900" />
                            <Setter TargetName="border" Property="Width" Value="auto"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyDataGridStyle" TargetType="DataGridRow">
        <Setter Property="FontSize" Value="12"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Blue"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>